package expr.subsetc;

import java.util.ArrayList;
import beaver.*;

/**
 * This class is a LALR parser generated by
 * <a href="http://beaver.sourceforge.net">Beaver</a> v0.9.6.1
 * from the grammar specification "subsetc.grammar".
 */
public class SubsetParser extends Parser {
	static public class Terminals {
		static public final short EOF = 0;
		static public final short ID = 1;
		static public final short MAIN = 2;
		static public final short RBRACE = 3;
		static public final short INT = 4;
		static public final short RPAREN = 5;
		static public final short FLOAT = 6;
		static public final short CHAR = 7;
		static public final short DOUBLE = 8;
		static public final short LPAREN = 9;
		static public final short LBRACE = 10;
		static public final short ASSIGN = 11;
		static public final short NUMBER = 12;
		static public final short SEMI = 13;
		static public final short VOID = 14;
	}

	static final ParsingTables PARSING_TABLES = new ParsingTables(
		"U9oTaTbkmZ0GHO#pa5AM94q8YuIgLhHI$pB$N9OkmFGwCWWgyOAjuxdoZEPgRE33VdWYfg9" +
		"c8fK4zS0ZGqOCGco8R6#VfFJecv7PBrF6vBQZiArjA6qDThI3kYL4gilK9Q4VL4v1AOTJz4" +
		"wfd6gTCSWdLZydHoT7fpt2oIdIXbbBjt9$cDbHeH2LA8MlQSH2kOFYFDGlHIqcOXhkdiMBU" +
		"1KhyIRUGyxv67HyqkgvlxYdlGC$0pUMVP$Lrx$KiFkBIg$XgRiNY8JJz4wJftf9TqNp1oJK" +
		"EGe=");

	static final Action RETURN8 = new Action() {
		public Symbol reduce(Symbol[] _symbols, int offset) {
			return _symbols[offset + 8];
		}
	};

	static final Action RETURN2 = new Action() {
		public Symbol reduce(Symbol[] _symbols, int offset) {
			return _symbols[offset + 2];
		}
	};

	static final Action RETURN5 = new Action() {
		public Symbol reduce(Symbol[] _symbols, int offset) {
			return _symbols[offset + 5];
		}
	};

	private final Action[] actions;

	public SubsetParser() {
		super(PARSING_TABLES);
		actions = new Action[] {
			RETURN8,	// [0] program = return_type MAIN LPAREN arguments RPAREN LBRACE statement_list RBRACE; returns 'RBRACE' although none is marked
			Action.RETURN,	// [1] return_type = INT
			Action.RETURN,	// [2] return_type = VOID
			Action.NONE,  	// [3] arguments = 
			RETURN2,	// [4] statement_list = statement statement_list; returns 'statement_list' although none is marked
			Action.RETURN,	// [5] statement_list = statement
			Action.RETURN,	// [6] statement = decl_statement
			RETURN5,	// [7] decl_statement = type ID ASSIGN NUMBER SEMI; returns 'SEMI' although none is marked
			Action.RETURN,	// [8] type = INT
			Action.RETURN,	// [9] type = FLOAT
			Action.RETURN,	// [10] type = CHAR
			Action.RETURN	// [11] type = DOUBLE
		};
	}

	protected Symbol invokeReduceAction(int rule_num, int offset) {
		return actions[rule_num].reduce(_symbols, offset);
	}
}
